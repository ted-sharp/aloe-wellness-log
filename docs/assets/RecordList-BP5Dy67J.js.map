{"version":3,"file":"RecordList-BP5Dy67J.js","sources":["../../aloe-wellness-log-react/src/components/RecordItem.tsx","../../aloe-wellness-log-react/src/pages/RecordList.tsx"],"sourcesContent":["import React, { memo, useCallback } from 'react';\nimport {\n  HiCheckCircle,\n  HiPencil,\n  HiTrash,\n  HiXCircle,\n  HiXMark,\n} from 'react-icons/hi2';\nimport { useI18n } from '../hooks/useI18n';\nimport type { Field, RecordItem as RecordItemType } from '../types/record';\nimport { truncateText } from '../utils/textUtils';\n\ninterface RecordItemProps {\n  record: RecordItemType;\n  field: Field | undefined;\n  editId: string | null;\n  editValue: string | number | boolean;\n  expandedTexts: Set<string>;\n  showButtons: Set<string>;\n  onEdit: (record: RecordItemType) => void;\n  onEditSave: (record: RecordItemType) => void;\n  onEditCancel: (recordId: string) => void;\n  onDelete: (record: RecordItemType) => void;\n  onEditValueChange: (value: string | number | boolean) => void;\n  onToggleTextExpansion: (recordId: string) => void;\n  onToggleButtons: (recordId: string) => void;\n}\n\nconst RecordItem: React.FC<RecordItemProps> = memo(\n  ({\n    record,\n    field,\n    editId,\n    editValue,\n    expandedTexts,\n    showButtons,\n    onEdit,\n    onEditSave,\n    onEditCancel,\n    onDelete,\n    onEditValueChange,\n    onToggleTextExpansion,\n    onToggleButtons,\n  }) => {\n    const { t, getAriaLabel } = useI18n();\n    const isEditing = editId === record.id;\n    const isTextExpanded = expandedTexts.has(record.id);\n    const areButtonsShown = showButtons.has(record.id);\n\n    const handleToggleButtons = useCallback(() => {\n      onToggleButtons(record.id);\n    }, [onToggleButtons, record.id]);\n\n    const handleEdit = useCallback(() => {\n      onEdit(record);\n    }, [onEdit, record]);\n\n    const handleEditSave = useCallback(() => {\n      onEditSave(record);\n    }, [onEditSave, record]);\n\n    const handleEditCancel = useCallback(() => {\n      onEditCancel(record.id);\n    }, [onEditCancel, record.id]);\n\n    const handleDelete = useCallback(() => {\n      onDelete(record);\n    }, [onDelete, record]);\n\n    const handleToggleExpansion = useCallback(\n      (e: React.MouseEvent) => {\n        e.stopPropagation();\n        onToggleTextExpansion(record.id);\n      },\n      [onToggleTextExpansion, record.id]\n    );\n\n    const handleInputChange = useCallback(\n      (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        onEditValueChange(e.target.value);\n      },\n      [onEditValueChange]\n    );\n\n    const handleBooleanChange = useCallback(\n      (value: boolean | undefined) => {\n        onEditValueChange(value ?? '');\n      },\n      [onEditValueChange]\n    );\n\n    return (\n      <li className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4 hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors duration-200\">\n        {isEditing ? (\n          // 編集モード\n          <div>\n            {field?.fieldId === 'notes' ? (\n              // 備考編集は左寄せレイアウト（通常表示と同じ）\n              <div className=\"flex flex-col sm:flex-row items-stretch gap-2 mb-4\">\n                <div className=\"text-xl font-medium text-gray-700 dark:text-gray-200 pr-0 sm:pr-2 border-b sm:border-b-0 sm:border-r border-gray-200 dark:border-gray-600 flex-shrink-0 pb-2 sm:pb-0\">\n                  {field ? field.name : record.fieldId}\n                </div>\n                <div className=\"pl-0 sm:pl-2 flex-1 min-w-0 pt-2 sm:pt-0\">\n                  {field?.type === 'boolean' ? (\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        type=\"button\"\n                        onClick={() => handleBooleanChange(true)}\n                        className={`px-3 py-1.5 rounded-lg border-2 text-sm font-medium transition-colors duration-200 flex-shrink-0 ${\n                          editValue === true\n                            ? 'bg-green-100 dark:bg-green-900/30 border-green-500 dark:border-green-400 text-green-700 dark:text-green-300'\n                            : 'bg-gray-100 dark:bg-gray-700 border-gray-300 dark:border-gray-600 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n                        }`}\n                        aria-label={getAriaLabel('setToYes', {\n                          fieldName: field.name,\n                        })}\n                      >\n                        {t('fields.yes')}\n                      </button>\n                      <button\n                        type=\"button\"\n                        onClick={() => handleBooleanChange(false)}\n                        className={`px-3 py-1.5 rounded-lg border-2 text-sm font-medium transition-colors duration-200 flex-shrink-0 ${\n                          editValue === false\n                            ? 'bg-red-100 dark:bg-red-900/30 border-red-500 dark:border-red-400 text-red-700 dark:text-red-300'\n                            : 'bg-gray-100 dark:bg-gray-700 border-gray-300 dark:border-gray-600 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n                        }`}\n                        aria-label={getAriaLabel('setToNo', {\n                          fieldName: field.name,\n                        })}\n                      >\n                        {t('fields.no')}\n                      </button>\n                      {editValue !== undefined && editValue !== '' && (\n                        <button\n                          type=\"button\"\n                          onClick={() => handleBooleanChange(undefined)}\n                          className=\"px-2 py-1.5 rounded-lg border-2 border-gray-300 text-xs text-gray-500 hover:text-gray-700 hover:bg-gray-100 transition-colors duration-200 flex-shrink-0\"\n                          aria-label={getAriaLabel('clearSelection', {\n                            fieldName: field.name,\n                          })}\n                          title={t('fields.clearSelection')}\n                        >\n                          ×\n                        </button>\n                      )}\n                    </div>\n                  ) : (\n                    <textarea\n                      value={String(editValue)}\n                      onChange={handleInputChange}\n                      className=\"border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-blue-600 dark:focus:ring-blue-400 dark:focus:border-blue-400 w-full h-24 resize-none\"\n                    />\n                  )}\n                </div>\n              </div>\n            ) : (\n              // 備考以外は二分割グリッドレイアウト\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 items-stretch mb-4\">\n                <div className=\"text-xl font-medium text-gray-700 dark:text-gray-200 text-left sm:text-right pr-0 sm:pr-2 border-b sm:border-b-0 sm:border-r border-gray-200 dark:border-gray-600 pb-2 sm:pb-0\">\n                  {field ? field.name : record.fieldId}\n                </div>\n                <div className=\"pl-0 sm:pl-2 pt-2 sm:pt-0\">\n                  {field?.type === 'boolean' ? (\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        type=\"button\"\n                        onClick={() => handleBooleanChange(true)}\n                        className={`px-3 py-1.5 rounded-lg border-2 text-sm font-medium transition-colors duration-200 flex-shrink-0 ${\n                          editValue === true\n                            ? 'bg-green-100 dark:bg-green-900/30 border-green-500 dark:border-green-400 text-green-700 dark:text-green-300'\n                            : 'bg-gray-100 dark:bg-gray-700 border-gray-300 dark:border-gray-600 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n                        }`}\n                        aria-label={getAriaLabel('setToYes', {\n                          fieldName: field.name,\n                        })}\n                      >\n                        {t('fields.yes')}\n                      </button>\n                      <button\n                        type=\"button\"\n                        onClick={() => handleBooleanChange(false)}\n                        className={`px-3 py-1.5 rounded-lg border-2 text-sm font-medium transition-colors duration-200 flex-shrink-0 ${\n                          editValue === false\n                            ? 'bg-red-100 dark:bg-red-900/30 border-red-500 dark:border-red-400 text-red-700 dark:text-red-300'\n                            : 'bg-gray-100 dark:bg-gray-700 border-gray-300 dark:border-gray-600 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n                        }`}\n                        aria-label={getAriaLabel('setToNo', {\n                          fieldName: field.name,\n                        })}\n                      >\n                        {t('fields.no')}\n                      </button>\n                      {editValue !== undefined && editValue !== '' && (\n                        <button\n                          type=\"button\"\n                          onClick={() => handleBooleanChange(undefined)}\n                          className=\"px-2 py-1.5 rounded-lg border-2 border-gray-300 text-xs text-gray-500 hover:text-gray-700 hover:bg-gray-100 transition-colors duration-200 flex-shrink-0\"\n                          aria-label={getAriaLabel('clearSelection', {\n                            fieldName: field.name,\n                          })}\n                          title={t('fields.clearSelection')}\n                        >\n                          ×\n                        </button>\n                      )}\n                    </div>\n                  ) : (\n                    <input\n                      type={field?.type === 'number' ? 'number' : 'text'}\n                      value={String(editValue)}\n                      onChange={handleInputChange}\n                      className=\"border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-blue-600 dark:focus:ring-blue-400 dark:focus:border-blue-400 w-full\"\n                    />\n                  )}\n                </div>\n              </div>\n            )}\n            <div className=\"flex gap-2 sm:gap-3 justify-center mt-4 pt-4 border-t border-gray-200\">\n              <button\n                onClick={handleEditSave}\n                className=\"bg-green-600 text-white px-3 sm:px-6 py-1.5 sm:py-3 rounded-lg shadow-md hover:bg-green-700 transition-colors duration-200 font-medium flex items-center gap-1.5 text-sm sm:text-base flex-1 sm:min-w-[120px] justify-center\"\n              >\n                <HiCheckCircle className=\"w-3.5 h-3.5 sm:w-4 sm:h-4\" />\n                {t('actions.save')}\n              </button>\n              <button\n                onClick={handleEditCancel}\n                className=\"bg-gray-400 text-white px-3 sm:px-6 py-1.5 sm:py-3 rounded-lg shadow-md hover:bg-gray-500 transition-colors duration-200 font-medium flex items-center gap-1.5 text-sm sm:text-base flex-1 sm:min-w-[120px] justify-center\"\n              >\n                <HiXMark className=\"w-3.5 h-3.5 sm:w-4 sm:h-4\" />\n                {t('actions.cancel')}\n              </button>\n            </div>\n          </div>\n        ) : (\n          // 表示モード\n          <div>\n            {field?.fieldId === 'notes' ? (\n              // 備考は縦棒区切りの左寄せレイアウト（カレンダーと同じ）\n              <div\n                className=\"flex flex-col sm:flex-row items-stretch gap-2 cursor-pointer\"\n                onClick={handleToggleButtons}\n              >\n                <div className=\"text-xl font-medium text-gray-700 dark:text-gray-200 pr-0 sm:pr-2 border-b sm:border-b-0 sm:border-r border-gray-200 dark:border-gray-600 flex-shrink-0 pb-2 sm:pb-0\">\n                  {field ? field.name : record.fieldId}\n                </div>\n                <div className=\"text-lg text-gray-800 dark:text-gray-200 font-semibold pl-0 sm:pl-2 flex-1 min-w-0 pt-2 sm:pt-0\">\n                  {typeof record.value === 'string' &&\n                  record.value.length > 30 ? (\n                    <button\n                      onClick={handleToggleExpansion}\n                      className=\"text-left hover:text-blue-600 transition-colors break-words w-full\"\n                      title={t('common.clickToExpand')}\n                    >\n                      {isTextExpanded\n                        ? record.value\n                        : truncateText(record.value)}\n                    </button>\n                  ) : (\n                    <span className=\"break-words\">{record.value}</span>\n                  )}\n                </div>\n              </div>\n            ) : (\n              // 備考以外は真ん中で区切って右寄せ・左寄せレイアウト\n              <div\n                className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 items-stretch cursor-pointer\"\n                onClick={handleToggleButtons}\n              >\n                <div className=\"text-xl font-medium text-gray-700 dark:text-gray-200 text-left sm:text-right pr-0 sm:pr-2 border-b sm:border-b-0 sm:border-r border-gray-200 dark:border-gray-600 pb-2 sm:pb-0\">\n                  {field ? field.name : record.fieldId}\n                </div>\n                <div className=\"text-lg text-gray-800 dark:text-gray-200 font-semibold pl-0 sm:pl-2 text-left pt-2 sm:pt-0\">\n                  {typeof record.value === 'boolean' ? (\n                    record.value ? (\n                      <span className=\"inline-flex items-center gap-2 text-green-600\">\n                        <HiCheckCircle className=\"w-6 h-6\" />\n                        {t('fields.yes')}\n                      </span>\n                    ) : (\n                      <span className=\"inline-flex items-center gap-2 text-red-600\">\n                        <HiXCircle className=\"w-6 h-6\" />\n                        {t('fields.no')}\n                      </span>\n                    )\n                  ) : (\n                    <span className=\"break-words\">\n                      {record.value}\n                      {field?.unit && typeof record.value !== 'boolean' && (\n                        <span className=\"text-gray-600 dark:text-gray-400 ml-1\">\n                          {field.unit}\n                        </span>\n                      )}\n                    </span>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* 編集・削除ボタン（クリックで表示/非表示） */}\n            {areButtonsShown && (\n              <div className=\"flex gap-2 sm:gap-3 justify-center mt-4 pt-4 border-t border-gray-200\">\n                <button\n                  onClick={handleEdit}\n                  className=\"bg-blue-500 text-white px-3 sm:px-6 py-1.5 sm:py-3 rounded-lg shadow-md hover:bg-blue-600 transition-colors duration-200 font-medium flex items-center gap-1.5 text-sm sm:text-base flex-1 sm:min-w-[120px] justify-center\"\n                >\n                  <HiPencil className=\"w-3.5 h-3.5 sm:w-4 sm:h-4\" />\n                  {t('actions.edit')}\n                </button>\n                <button\n                  onClick={handleDelete}\n                  className=\"bg-red-600 text-white px-3 sm:px-6 py-1.5 sm:py-3 rounded-lg shadow-md hover:bg-red-700 transition-colors duration-200 font-medium flex items-center gap-1.5 text-sm sm:text-base flex-1 sm:min-w-[120px] justify-center\"\n                >\n                  <HiTrash className=\"w-3.5 h-3.5 sm:w-4 sm:h-4\" />\n                  {t('actions.delete')}\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </li>\n    );\n  }\n);\n\nRecordItem.displayName = 'RecordItem';\n\nexport default RecordItem;\n","import { memo, useCallback, useEffect, useMemo, useState } from 'react';\nimport {\n  HiCalendarDays,\n  HiChevronDoubleLeft,\n  HiChevronDoubleRight,\n  HiChevronLeft,\n  HiChevronRight,\n} from 'react-icons/hi2';\nimport Button from '../components/Button';\nimport RecordItem from '../components/RecordItem';\nimport { useI18n } from '../hooks/useI18n';\nimport { useRecordsStore } from '../store/records';\nimport type { Field, RecordItem as RecordItemType } from '../types/record';\nimport { isDev } from '../utils/devTools';\nimport {\n  performanceMonitor,\n  trackDatabaseOperation,\n} from '../utils/performanceMonitor';\n\n// メモ化されたレコードグループコンポーネント（パフォーマンス監視付き）\nconst RecordGroup = memo<{\n  datetime: string;\n  records: RecordItemType[];\n  getField: (fieldId: string) => Field | undefined;\n  sortRecordsByFieldOrder: (records: RecordItemType[]) => RecordItemType[];\n  editId: string | null;\n  editValue: string | number | boolean;\n  expandedTexts: Set<string>;\n  showButtons: Set<string>;\n  onEdit: (record: RecordItemType) => void;\n  onEditSave: (record: RecordItemType) => void;\n  onEditCancel: (recordId: string) => void;\n  onDelete: (record: RecordItemType) => void;\n  onEditValueChange: (value: string | number | boolean) => void;\n  onToggleTextExpansion: (recordId: string) => void;\n  onToggleButtons: (recordId: string) => void;\n}>(\n  ({\n    datetime,\n    records,\n    getField,\n    sortRecordsByFieldOrder,\n    editId,\n    editValue,\n    expandedTexts,\n    showButtons,\n    onEdit,\n    onEditSave,\n    onEditCancel,\n    onDelete,\n    onEditValueChange,\n    onToggleTextExpansion,\n    onToggleButtons,\n  }) => {\n    // レンダリング監視\n    useEffect(() => {\n      performanceMonitor.trackRender.start(`RecordGroup-${datetime}`);\n      return () => {\n        performanceMonitor.trackRender.end(`RecordGroup-${datetime}`);\n      };\n    });\n\n    return (\n      <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-md p-6\">\n        <div className=\"text-2xl font-semibold text-gray-800 dark:text-white mb-8 border-b border-gray-200 dark:border-gray-600 pb-4 flex items-center gap-2\">\n          <HiCalendarDays className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\n          {datetime}\n        </div>\n        <ul className=\"space-y-4\">\n          {sortRecordsByFieldOrder(records).map(record => (\n            <RecordItem\n              key={record.id}\n              record={record}\n              field={getField(record.fieldId)}\n              editId={editId}\n              editValue={editValue}\n              expandedTexts={expandedTexts}\n              showButtons={showButtons}\n              onEdit={onEdit}\n              onEditSave={onEditSave}\n              onEditCancel={onEditCancel}\n              onDelete={onDelete}\n              onEditValueChange={onEditValueChange}\n              onToggleTextExpansion={onToggleTextExpansion}\n              onToggleButtons={onToggleButtons}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n);\n\nRecordGroup.displayName = 'RecordGroup';\n\nexport default function RecordList() {\n  const { t, translateFieldName } = useI18n();\n  const {\n    records,\n    fields,\n    loadRecords,\n    loadFields,\n    updateRecord,\n    deleteRecord,\n  } = useRecordsStore();\n  const [editId, setEditId] = useState<string | null>(null);\n  const [editValue, setEditValue] = useState<string | number | boolean>('');\n  const [expandedTexts, setExpandedTexts] = useState<Set<string>>(new Set());\n  const [showButtons, setShowButtons] = useState<Set<string>>(new Set());\n\n  // ページング関連の状態\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n\n  // パフォーマンス監視の初期化\n  useEffect(() => {\n    performanceMonitor.trackRender.start('RecordList');\n    return () => {\n      performanceMonitor.trackRender.end('RecordList');\n    };\n  });\n\n  // データ読み込み（パフォーマンス監視付き）\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        await trackDatabaseOperation('load-fields', async () => {\n          await loadFields();\n        });\n\n        await trackDatabaseOperation(\n          'load-records',\n          async () => {\n            await loadRecords();\n          },\n          records.length\n        );\n      } catch (error) {\n        console.error('Data loading error:', error);\n      }\n    };\n\n    loadData();\n  }, [loadFields, loadRecords, records.length]);\n\n  // fieldIdから項目名・型を取得（メモ化、最適化済み）\n  const getField = useCallback(\n    (fieldId: string): Field | undefined => {\n      if (fieldId === 'notes') {\n        return {\n          fieldId: 'notes',\n          name: translateFieldName('notes'),\n          type: 'string' as const,\n          order: 0,\n        };\n      }\n\n      // 優先順位1: fieldIdで検索\n      let field = fields.find(f => f.fieldId === fieldId);\n\n      // 優先順位2: nameで検索（fieldIdで見つからない場合）\n      if (!field) {\n        field = fields.find(f => f.name === fieldId);\n      }\n\n      return field;\n    },\n    [fields, translateFieldName]\n  );\n\n  // 項目の順序を制御する関数（メモ化、最適化済み）\n  const sortRecordsByFieldOrder = useCallback(\n    (records: RecordItemType[]) => {\n      const startTime = performance.now();\n      const result = [...records].sort((a, b) => {\n        const fieldA = getField(a.fieldId);\n        const fieldB = getField(b.fieldId);\n\n        // order属性で並び替え（小さいほど上に表示）\n        const orderA = fieldA?.order ?? 999;\n        const orderB = fieldB?.order ?? 999;\n\n        return orderA - orderB;\n      });\n\n      const duration = performance.now() - startTime;\n      if (isDev && duration > 10) {\n        console.warn(\n          `🐌 Slow sort operation: ${duration.toFixed(2)}ms for ${\n            records.length\n          } records`\n        );\n      }\n\n      return result;\n    },\n    [getField]\n  );\n\n  // 日付・時刻で降順ソート（新しい順）（最適化済み）\n  const sortedRecords = useMemo(() => {\n    const startTime = performance.now();\n    const result = [...records].sort((a, b) => {\n      const aKey = `${a.date} ${a.time}`;\n      const bKey = `${b.date} ${b.time}`;\n      return bKey.localeCompare(aKey);\n    });\n\n    const duration = performance.now() - startTime;\n    if (isDev && duration > 10) {\n      console.warn(\n        `🐌 Slow record sorting: ${duration.toFixed(2)}ms for ${\n          records.length\n        } records`\n      );\n    }\n\n    return result;\n  }, [records]);\n\n  // 日付・時刻ごとにグループ化（最適化済み）\n  const grouped = useMemo(() => {\n    const startTime = performance.now();\n    const groupMap: Record<string, RecordItemType[]> = {};\n    const result = sortedRecords.reduce((acc, rec) => {\n      const key = `${rec.date} ${rec.time}`;\n      if (!acc[key]) acc[key] = [];\n      acc[key].push(rec);\n      return acc;\n    }, groupMap);\n\n    const duration = performance.now() - startTime;\n    if (isDev && duration > 10) {\n      console.warn(\n        `🐌 Slow grouping: ${duration.toFixed(2)}ms for ${\n          sortedRecords.length\n        } records`\n      );\n    }\n\n    return result;\n  }, [sortedRecords]);\n\n  // ページング処理（最適化済み）\n  const paginatedGroups = useMemo(() => {\n    const startTime = performance.now();\n    const groupEntries = Object.entries(grouped);\n    const totalGroups = groupEntries.length;\n    const totalPages = Math.max(1, Math.ceil(totalGroups / pageSize));\n\n    // 現在のページが範囲外の場合は1ページに戻す\n    if (currentPage > totalPages) {\n      setCurrentPage(1);\n    }\n\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    const paginatedEntries = groupEntries.slice(startIndex, endIndex);\n\n    const result = {\n      groups: Object.fromEntries(paginatedEntries),\n      totalGroups,\n      totalPages,\n      currentPage: Math.min(currentPage, totalPages),\n    };\n\n    const duration = performance.now() - startTime;\n    if (isDev && duration > 5) {\n      console.warn(\n        `🐌 Slow pagination: ${duration.toFixed(2)}ms for ${totalGroups} groups`\n      );\n    }\n\n    return result;\n  }, [grouped, currentPage, pageSize]);\n\n  // ページ変更（メモ化、パフォーマンス監視付き）\n  const goToPage = useCallback(\n    (page: number) => {\n      const interactionId =\n        performanceMonitor.trackInteraction.start('page-change');\n      setCurrentPage(Math.max(1, Math.min(page, paginatedGroups.totalPages)));\n      performanceMonitor.trackInteraction.end(interactionId, 'page-change');\n    },\n    [paginatedGroups.totalPages]\n  );\n\n  // 編集関連のハンドラー（メモ化、パフォーマンス監視付き）\n  const handleEdit = useCallback((rec: RecordItemType) => {\n    const interactionId =\n      performanceMonitor.trackInteraction.start('edit-start');\n    setEditId(rec.id);\n    setEditValue(rec.value);\n    performanceMonitor.trackInteraction.end(interactionId, 'edit-start');\n  }, []);\n\n  const handleEditSave = useCallback(\n    async (rec: RecordItemType) => {\n      const interactionId =\n        performanceMonitor.trackInteraction.start('edit-save');\n      try {\n        await trackDatabaseOperation(\n          'update-record',\n          async () => {\n            await updateRecord({ ...rec, value: editValue });\n          },\n          1\n        );\n\n        setEditId(null);\n        setEditValue('');\n        // ボタン表示状態もクリア\n        setShowButtons(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(rec.id);\n          return newSet;\n        });\n      } catch (error) {\n        console.error('Edit save error:', error);\n      } finally {\n        performanceMonitor.trackInteraction.end(interactionId, 'edit-save');\n      }\n    },\n    [editValue, updateRecord]\n  );\n\n  const handleEditCancel = useCallback((recordId: string) => {\n    const interactionId =\n      performanceMonitor.trackInteraction.start('edit-cancel');\n    setEditId(null);\n    setEditValue('');\n    // ボタン表示状態もクリア\n    setShowButtons(prev => {\n      const newSet = new Set(prev);\n      newSet.delete(recordId);\n      return newSet;\n    });\n    performanceMonitor.trackInteraction.end(interactionId, 'edit-cancel');\n  }, []);\n\n  const handleDelete = useCallback(\n    async (rec: RecordItemType) => {\n      const interactionId =\n        performanceMonitor.trackInteraction.start('delete-record');\n      try {\n        if (window.confirm(t('pages.list.confirmDelete'))) {\n          await trackDatabaseOperation(\n            'delete-record',\n            async () => {\n              await deleteRecord(rec.id);\n            },\n            1\n          );\n\n          // ボタン表示状態もクリア\n          setShowButtons(prev => {\n            const newSet = new Set(prev);\n            newSet.delete(rec.id);\n            return newSet;\n          });\n        }\n      } catch (error) {\n        console.error('Delete error:', error);\n      } finally {\n        performanceMonitor.trackInteraction.end(interactionId, 'delete-record');\n      }\n    },\n    [deleteRecord, t]\n  );\n\n  const handleEditValueChange = useCallback(\n    (value: string | number | boolean) => {\n      setEditValue(value);\n    },\n    []\n  );\n\n  const handleToggleTextExpansion = useCallback((recordId: string) => {\n    const interactionId =\n      performanceMonitor.trackInteraction.start('toggle-text');\n    setExpandedTexts(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(recordId)) {\n        newSet.delete(recordId);\n      } else {\n        newSet.add(recordId);\n      }\n      return newSet;\n    });\n    performanceMonitor.trackInteraction.end(interactionId, 'toggle-text');\n  }, []);\n\n  const handleToggleButtons = useCallback((recordId: string) => {\n    const interactionId =\n      performanceMonitor.trackInteraction.start('toggle-buttons');\n    setShowButtons(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(recordId)) {\n        newSet.delete(recordId);\n      } else {\n        newSet.add(recordId);\n      }\n      return newSet;\n    });\n    performanceMonitor.trackInteraction.end(interactionId, 'toggle-buttons');\n  }, []);\n\n  const handlePageSizeChange = useCallback((newPageSize: number) => {\n    const interactionId =\n      performanceMonitor.trackInteraction.start('page-size-change');\n    setPageSize(newPageSize);\n    setCurrentPage(1);\n    performanceMonitor.trackInteraction.end(interactionId, 'page-size-change');\n  }, []);\n\n  // 開発環境でのパフォーマンス情報表示\n  useEffect(() => {\n    if (!isDev) return;\n\n    const logPerformanceInfo = () => {\n      console.group('🔍 RecordList Performance Info');\n      console.log(`📊 Total Records: ${records.length}`);\n      console.log(`📊 Total Groups: ${paginatedGroups.totalGroups}`);\n      console.log(\n        `📊 Current Page: ${paginatedGroups.currentPage}/${paginatedGroups.totalPages}`\n      );\n      console.log(`📊 Page Size: ${pageSize}`);\n      console.groupEnd();\n    };\n\n    const timeout = setTimeout(logPerformanceInfo, 2000);\n    return () => clearTimeout(timeout);\n  }, [\n    records.length,\n    paginatedGroups.totalGroups,\n    paginatedGroups.currentPage,\n    paginatedGroups.totalPages,\n    pageSize,\n  ]);\n\n  return (\n    <div className=\"max-w-full sm:max-w-4xl mx-auto px-2 sm:px-0\">\n      <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800 dark:text-white mb-6 sm:mb-8\">\n        {t('pages.list.title')}\n      </h1>\n\n      {/* 表示件数選択 */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-md p-4 sm:p-6 mb-8\">\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3 sm:gap-0\">\n          <div className=\"text-center sm:text-left\">\n            <span className=\"text-lg sm:text-xl font-bold text-gray-800 dark:text-white\">\n              {paginatedGroups.totalGroups}\n            </span>\n            <span className=\"text-sm sm:text-base text-gray-600 dark:text-gray-300 ml-1\">\n              {t('pages.list.recordGroups')}\n            </span>\n          </div>\n          <div className=\"flex items-center justify-center sm:justify-end gap-2\">\n            <span className=\"text-sm sm:text-base text-gray-600 dark:text-gray-300 whitespace-nowrap\">\n              {t('pages.list.displayCount')}\n            </span>\n            <select\n              value={pageSize}\n              onChange={e => handlePageSizeChange(Number(e.target.value))}\n              className=\"border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white rounded-lg px-3 py-1.5 sm:py-2 focus:outline-none focus:ring-2 focus:ring-blue-600 dark:focus:ring-blue-400 text-sm sm:text-base min-w-[80px]\"\n            >\n              <option value={10}>{t('pages.list.items10')}</option>\n              <option value={20}>{t('pages.list.items20')}</option>\n              <option value={50}>{t('pages.list.items50')}</option>\n              <option value={100}>{t('pages.list.items100')}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* ページネーション（上部） */}\n      {paginatedGroups.totalPages > 1 && (\n        <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-md p-3 sm:p-4 mb-8\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-1 sm:gap-2\">\n              <Button\n                variant=\"primary\"\n                size=\"sm\"\n                icon={HiChevronDoubleLeft}\n                onClick={() => goToPage(1)}\n                disabled={paginatedGroups.currentPage === 1}\n                aria-label=\"最初のページ\"\n              >\n                <span className=\"sr-only\">最初のページ</span>\n              </Button>\n              <Button\n                variant=\"primary\"\n                size=\"sm\"\n                icon={HiChevronLeft}\n                onClick={() => goToPage(paginatedGroups.currentPage - 1)}\n                disabled={paginatedGroups.currentPage === 1}\n                aria-label=\"前のページ\"\n              >\n                <span className=\"sr-only\">前のページ</span>\n              </Button>\n            </div>\n\n            <span className=\"text-xs sm:text-sm text-gray-600 dark:text-gray-300 whitespace-nowrap\">\n              {paginatedGroups.currentPage} / {paginatedGroups.totalPages}{' '}\n              {t('pages.list.page')}\n            </span>\n\n            <div className=\"flex items-center gap-1 sm:gap-2\">\n              <Button\n                variant=\"primary\"\n                size=\"sm\"\n                icon={HiChevronRight}\n                onClick={() => goToPage(paginatedGroups.currentPage + 1)}\n                disabled={\n                  paginatedGroups.currentPage === paginatedGroups.totalPages\n                }\n                aria-label=\"次のページ\"\n              >\n                <span className=\"sr-only\">次のページ</span>\n              </Button>\n              <Button\n                variant=\"primary\"\n                size=\"sm\"\n                icon={HiChevronDoubleRight}\n                onClick={() => goToPage(paginatedGroups.totalPages)}\n                disabled={\n                  paginatedGroups.currentPage === paginatedGroups.totalPages\n                }\n                aria-label=\"最後のページ\"\n              >\n                <span className=\"sr-only\">最後のページ</span>\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 記録一覧 */}\n      {Object.entries(paginatedGroups.groups).length === 0 && (\n        <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-md p-6 sm:p-8 text-center text-gray-500 dark:text-gray-400\">\n          <p className=\"text-base sm:text-lg\">{t('pages.list.noRecords')}</p>\n        </div>\n      )}\n\n      <div className=\"space-y-8\">\n        {Object.entries(paginatedGroups.groups).map(([datetime, recs]) => (\n          <RecordGroup\n            key={datetime}\n            datetime={datetime}\n            records={recs}\n            getField={getField}\n            sortRecordsByFieldOrder={sortRecordsByFieldOrder}\n            editId={editId}\n            editValue={editValue}\n            expandedTexts={expandedTexts}\n            showButtons={showButtons}\n            onEdit={handleEdit}\n            onEditSave={handleEditSave}\n            onEditCancel={handleEditCancel}\n            onDelete={handleDelete}\n            onEditValueChange={handleEditValueChange}\n            onToggleTextExpansion={handleToggleTextExpansion}\n            onToggleButtons={handleToggleButtons}\n          />\n        ))}\n      </div>\n\n      {/* ページネーション（下部） */}\n      {paginatedGroups.totalPages > 1 && (\n        <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-md p-3 sm:p-4 mt-8\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-1 sm:gap-2\">\n              <Button\n                variant=\"primary\"\n                size=\"sm\"\n                icon={HiChevronDoubleLeft}\n                onClick={() => goToPage(1)}\n                disabled={paginatedGroups.currentPage === 1}\n                aria-label=\"最初のページ\"\n              >\n                <span className=\"sr-only\">最初のページ</span>\n              </Button>\n              <Button\n                variant=\"primary\"\n                size=\"sm\"\n                icon={HiChevronLeft}\n                onClick={() => goToPage(paginatedGroups.currentPage - 1)}\n                disabled={paginatedGroups.currentPage === 1}\n                aria-label=\"前のページ\"\n              >\n                <span className=\"sr-only\">前のページ</span>\n              </Button>\n            </div>\n\n            <span className=\"text-xs sm:text-sm text-gray-600 dark:text-gray-300 whitespace-nowrap\">\n              {paginatedGroups.currentPage} / {paginatedGroups.totalPages}{' '}\n              {t('pages.list.page')}\n            </span>\n\n            <div className=\"flex items-center gap-1 sm:gap-2\">\n              <Button\n                variant=\"primary\"\n                size=\"sm\"\n                icon={HiChevronRight}\n                onClick={() => goToPage(paginatedGroups.currentPage + 1)}\n                disabled={\n                  paginatedGroups.currentPage === paginatedGroups.totalPages\n                }\n                aria-label=\"次のページ\"\n              >\n                <span className=\"sr-only\">次のページ</span>\n              </Button>\n              <Button\n                variant=\"primary\"\n                size=\"sm\"\n                icon={HiChevronDoubleRight}\n                onClick={() => goToPage(paginatedGroups.totalPages)}\n                disabled={\n                  paginatedGroups.currentPage === paginatedGroups.totalPages\n                }\n                aria-label=\"最後のページ\"\n              >\n                <span className=\"sr-only\">最後のページ</span>\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["RecordItem","memo","record","field","editId","editValue","expandedTexts","showButtons","onEdit","onEditSave","onEditCancel","onDelete","onEditValueChange","onToggleTextExpansion","onToggleButtons","t","getAriaLabel","useI18n","isEditing","id","isTextExpanded","has","areButtonsShown","handleToggleButtons","useCallback","handleEdit","handleEditSave","handleEditCancel","handleDelete","handleToggleExpansion","e","stopPropagation","handleInputChange","target","value","handleBooleanChange","jsx","className","children","fieldId","jsxs","name","type","onClick","fieldName","title","String","onChange","HiCheckCircle","HiXMark","length","truncateText","HiXCircle","unit","HiPencil","HiTrash","displayName","RecordGroup","datetime","records","getField","sortRecordsByFieldOrder","useEffect","performanceMonitor","trackRender","start","end","HiCalendarDays","map","RecordList","translateFieldName","fields","loadRecords","loadFields","updateRecord","deleteRecord","useRecordsStore","setEditId","useState","setEditValue","setExpandedTexts","Set","setShowButtons","currentPage","setCurrentPage","pageSize","setPageSize","async","trackDatabaseOperation","error","console","loadData","order","find","f","performance","now","result","sort","a","b","fieldA","fieldB","sortedRecords","useMemo","aKey","date","time","localeCompare","grouped","reduce","acc","rec","key","push","paginatedGroups","groupEntries","Object","entries","totalGroups","totalPages","Math","max","ceil","startIndex","endIndex","paginatedEntries","slice","groups","fromEntries","min","goToPage","page","interactionId","trackInteraction","prev","newSet","delete","recordId","window","confirm","handleEditValueChange","handleToggleTextExpansion","add","handlePageSizeChange","newPageSize","Number","Button","variant","size","icon","HiChevronDoubleLeft","disabled","HiChevronLeft","HiChevronRight","HiChevronDoubleRight","recs"],"mappings":"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"}